{
	 "Print to console": {
		"prefix": "cp",
		"body": [
			"(function () {",
			"	'use strict';",
			"\t",
			"	${component}Controller.inject = ['$dependencias']",
			"\t",
			"	angular",
			"		.module ('app')",
			"		.component ('$component', {",
			"			bindings: {",
			"				$model: '<'",
			"			},",
			"			controller: ${component}Controller,",
			"			controllerAs: '$vm',",
			"			templateUrl: '$view.html'",
			"		});",
			"\t",
			"		function ${component}Controller($dependencias){",
			"			var vm = this;",
			"\t",
			"			vm.$onInit = onInit;",
			"\t",
			"			function onInit() {",
			"				$0",				
			"			}",
			"		}",
			"} ());"
		],
		"description": "Componente do angular 1.x"
	},

	"Componente dados do formulario": {
		"prefix": "cp-dados",
		"body": [
			"(function () {",
			"	'use strict';",
			"\t",
			"	${componente}Controller.inject = ['$dependencias']",
			"\t",
			"	angular",
			"		.module ('app')",
			"		.component ('dados$component', {",
			"			bindings: {",
			"				$model: '<',",
			"				$onCancelar: '&',",
			"				$onSalvar: '&'",
			"			},",
			"			controller: ${componente}Controller,",
			"			controllerAs: 'vm',",
			"			templateUrl: '$view'",
			"		});",
			"\t",
			"		function ${componente}Controller($dependencias){",
			"			var vm = this;",
			"\t",
			"			vm.$onInit = onInit;",
			"			vm.$cancelar = $cancelar;",
			"			vm.$salvar = $salvar;",
			"\t",
			"			function onInit() {",
			"				$0",				
			"			}",
			"\t",
			"			function $cancelar() {",
			"				vm.$onCancelar()",				
			"			}",
			"\t",
			"			function $salvar($model) {",
			"				vm.$onSalvar({ $model: angular.copy($model) })",				
			"			}",
			"		}",
			"} ());"
		],
		"description": "Component: dados do formulário"
	},

	"Componente listar dados": {
		"prefix": "cp-lista",
		"body": [
			"(function () {",
			"	'use strict';",
			"\t",
			"	${componente}Controller.inject = ['$dependencias']",
			"\t",
			"	angular",
			"		.module ('app')",
			"		.component ('lista$component', {",
			"			bindings: {",
			"				$models: '<',",
			"				$onNovo: '&',",
			"				$onEditar: '&',",
			"				$onRemover: '&'",
			"			},",
			"			controller: ${componente}Controller,",
			"			controllerAs: '${3}',",
			"			templateUrl: '${4}'",
			"		});",
			"\t",
			"		function ${componente}Controller($dependencias){",
			"			var vm = this;",
			"\t",
			"			vm.$onInit = $onInit;",
			"			vm.$novo = $novo;",
			"			vm.$editar = $editar;",
			"			vm.$remover = $remover;",
			"\t",
			"			function $onInit() {",
			"				$0",				
			"			}",
			"\t",
			"			function $novo() {",
			"				vm.$onNovo()",				
			"			}",
			"\t",
			"			function $editar($model) {",
			"				$model.modoEdicao = true;",
			"\t",
			"				vm.$onEditar({ $model: angular.copy($model) })",				
			"			}",
			"\t",
			"			function $remover($model) {",
			"				$model.modoExclusao = true;",
			"\t",
			"				vm.$onRemover({ $model: angular.copy($model) })",
			"			}",
			"		}",
			"} ());"
		],
		"description": "Component: listar dados"
	},

	"Componente sessao": {
		"prefix": "cp-sessao",
		"body": [
			"(function () {",
			"    'use strict';",
			"\t",
			"    sessao${componente}Controller.$inject = ['dialogs', 'focus'];",
			"\t",
			"    angular",
			"        .module('app')",
			"        .component('sessao${component}', {",
			"            bindings: {",
			"                $models: '=',",
			"                readonly: '<'",
			"            },",
			"            controller: sessao${componente}Controller,",
			"            templateUrl: ''",
			"        });",
			"\t",
			"    function sessao${componente}Controller(dialogs, focus) {",
			"        var vm = this;",
			"\t",
			"        vm.$salvar = $salvar;",
			"        vm.$cancelar = $cancelar;",
			"        vm.$editar = $editar;",
			"        vm.$novo = $novo;",
			"        vm.$remover = $remover;",
			"        vm.$model = {};",
			"        vm.mostrar${component}Form = false;",
			"        vm.$onInit = onInit;",
			"\t",
			"        function onInit() {",
			"            vm.$models = vm.$models || [];",
			"        }",
			"\t",
			"        function $salvar($model) {",
			"            var _$model = angular.copy($model);",
			"\t",
			"            if (_$model.modoEdicao) {",
			"                atualizarLista(_$model)",
			"            } else {",
			"                vm.$models.push(_$model);",
			"\t",
			"            }",
			"\t",
			"            vm.$model = {};",
			"            vm.mostrar${component}Form = false;",
			"        }",
			"\t",
			"        function atualizarLista($model) {",
			"            vm.$models = vm.$models.map(function (item) {",
			"                if (item.modoEdicao) {",
			"                    $model.modoEdicao = false;",
			"                    return $model;",
			"                }",
			"                return item;",
			"            });",
			"        }",
			"\t",
			"        function $cancelar() {",
			"            vm.$model = {};",
			"\t",
			"            vm.$models = vm.$models.map(function (item) {",
			"                item.modoEdicao = false;",
			"\t",
			"                return item;",
			"            });",
			"\t",
			"            vm.mostrar${component}Form = false;",
			"        }",
			"\t",
			"        function $editar($model) {",
			"            vm.mostrar${component}Form = true;",
			"            vm.$model = angular.copy($model);",
			"        }",
			"\t",
			"        function $novo() {",
			"            vm.mostrar${component}Form = true;",
			"            focus('${idInputFocus}');",
			"        }",
			"\t",
			"        function $remover($model) {",
			"            var confirmacao = dialogs.confirm('Confirmar', 'Confirma a remoção do ${model}?');",
			"            confirmacao",
			"                .result",
			"                .then(function (btn) {",
			"                    vm.$models = vm.$models.filter(function (item) {",
			"                        return !item.modoExclusao;",
			"                    });",
			"                })",
			"                .catch(function () {",
			"                    vm.$models = vm.$models.map(function (item) {",
			"                        item.modoExclusao = false;",
			"                        return item;",
			"                    });",
			"                });",
			"        }",
			"    }",
			"}());"
		],
		"description": "Component: cria uma sessão"
	}
}
